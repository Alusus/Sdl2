import "Srl/Console.alusus";
import "Srl/System.alusus";
import "Srl/Fs.alusus";
import "../Sdl.alusus";

@expname[exit] function exit (status: Int);

if Sdl.init(Sdl.INIT_VIDEO) != 0 {
  Srl.Console.print("SDL initialization failed.\n");
  exit(1);
};

if Sdl.Img.init(Sdl.Img.INIT_PNG) != Sdl.Img.INIT_PNG {
  Srl.Console.print("SDL IMG initialization failed.\n");
  exit(1);
};

def window: ptr[Sdl.Window] = Sdl.Window.create("Shooter 01", 0, 0, 1280, 720, 0);
if window == 0 {
  Srl.Console.print("SDL window creation failed.\n");
  exit(1);
};

Sdl.setHint(Sdl.Hints.RENDER_SCALE_QUALITY, "linear");

def renderer: ptr[Sdl.Renderer] = Sdl.Renderer.create(window, -1, Sdl.Renderer.Flags.ACCELERATED);
if renderer == 0 {
  Srl.Console.print("SDL renderer creation failed.\n");
  exit(1);
};

def texture: ptr[Sdl.Texture] = Sdl.Img.loadTexture(renderer, "player.png");

function blit (texture: ptr[Sdl.Texture], x: Int, y: Int)
{
  def dest: Sdl.Rect;

	dest.x = x;
	dest.y = y;
	Sdl.Texture.query(texture, 0, 0, dest.w~ptr, dest.h~ptr);
	Sdl.Renderer.copy(renderer, texture, 0, dest~ptr);
};

def x: Int = 0;
def i: Int;

while 1 {
  Sdl.Renderer.setDrawColor(renderer, 96, 128, 255, 255);
	Sdl.Renderer.clear(renderer);

  for i = 0, i < 10, ++i blit(texture, x + i * 10, 100 + 50 * i);
  if ++x >= 1000 x = 0;

  def event: Sdl.Event;
  while Sdl.pollEvent(event~ptr) != 0 {
    if event.eventType == Sdl.Event.QUIT exit(0);
	};

	Sdl.Renderer.present(renderer);

  Srl.System.sleep(1000);
};
